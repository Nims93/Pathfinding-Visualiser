{"version":3,"sources":["modules/heap.js","index.js","../node_modules/parcel-bundler/src/builtins/hmr-runtime.js"],"names":["MinHeap","index","Math","floor","heap","length","idx1","idx2","tmp","element","push","idx","parent","swap","root","shift","unshift","pop","heapify","left","leftChild","right","rightChild","biggest","grid","animationSpeed","canMutate","previousAlgo","gridSizeSlider","document","querySelector","gridWrapper","clearBtn","animationSpeedBtn","pathfindingDropdownBtn","mazeGenDroptdownBtn","tutorialBtn","Node","id","split","map","n","Number","x","y","visited","isWall","isStart","isEnd","DOMRef","up","down","HTMLElement","prototype","empty","firstChild","removeChild","createGrid","parseInt","value","setStartEndNodes","gridSize","visualiserWrapper","wrapperWidth","clientWidth","wrapperHeight","clientHeight","gridWidth","gridHeight","divWidth","toFixed","divHeight","Array","div","createElement","classList","add","setAttribute","style","width","height","append","addEventListener","handleGridSizeInputSlider","window","e","target","clearVisited","aStar","depthFirstSearch","breadthFirstSearch","greedyBreadthFirstSearch","biDirectionalBreadthFirstSearch","clearBoard","generateMazeRecursiveBacktracker","generateWallsRecursiveDivision","generateWallsRandom","innerHTML","row","node","remove","startAndEndY","startX","endX","ceil","startNode","endNode","prevEle","handleMousedown","preventDefault","contains","DOMEle","buttons","gridCoords","handleMouseover","prevGridCoords","current","findPathOnStartOrEndNodeMouseDrag","prevAnimationSpeed","closeTutorialBtnArray","querySelectorAll","tutorialTransparencyLayer","closeBtn","tutorialNextAndPrevBtns","btn","handleNextAndPreTutorialClick","pageChangeBtn","currentTarget","tutorialWrapper","i","children","currVisChildIdx","randInt","max","min","random","totalWalls","nodesToAnimate","animateNodes","chooseOrientation","wallsToAnimate","previousHoles","forEach","yIndex","xIndex","firstYStart","firstYEnd","firstXStart","firstXEnd","orientation","divide","yStart","yEnd","xStart","xEnd","orient","yDivideCoord","holeCoord","xDivideCoord","getRecursiveBacktrackerUnvisitedNeighbors","currentX","currentY","possibleNeighbors","neighbors","nextIdx","startY","_","nodesToAddWall","stack","next","nextY","nextX","inbetweenWall","manhattanDist","yCurrent","xCurrent","abs","visitedNodesToDisplay","horizDist","Infinity","prev","priorityQueue","currentHorizDist","insert","isEmpty","extractMin","currentNode","shortestPath","getShortestPath","concat","Object","values","getNeighbors","filter","neighbor","newHorizDist","weight","currentGlobalCost","newNeighborDist","neighborHorizDist","newGlobalCost","queue","startNodeQueue","startNodePrev","startVisited","endNodeQueue","endNodePrev","endVisited","currentEndNode","currentStartNode","intersection","shortestPathStart","shortestPathEnd","pathNodesToDisplay","reverse","startNeighbors","endNeighbors","getNeighborsReversed","prevArray","nodesArray","removeWallAnimation","transform","offset","backgroundColor","wallAnimation","visitedAnimation","borderRadius","pathAnimation","speed","nodeTypeToAnimate","setTimeout","animate","includes","OVERLAY_ID","OldModule","module","bundle","Module","moduleName","call","hot","data","hotData","_acceptCallbacks","_disposeCallbacks","accept","fn","dispose","checkedAssets","assetsToAccept","isParcelRequire","WebSocket","hostname","location","protocol","ws","onmessage","event","JSON","parse","type","handled","assets","asset","isNew","didAccept","hmrAcceptCheck","global","parcelRequire","every","generated","js","console","clear","hmrApply","v","hmrAcceptRun","reload","close","onclose","log","removeErrorOverlay","error","message","overlay","createErrorOverlay","body","appendChild","getElementById","stackTrace","innerText","getParents","modules","parents","k","d","dep","isArray","Function","deps","cached","cache","some","cb"],"mappings":"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,CAAb,EAAgBA,CAAC,GAAG0F,UAAU,CAACtN,MAA/B,EAAuC4H,CAAC,EAAxC,EAA4C;AAAA,qBAAnCA,CAAmC;;AAAA,6BAKxC;AA2DH;AACF;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AC9tCA,IAAIwG,UAAU,GAAG,4BAAjB;AAEA,IAAIC,SAAS,GAAGC,MAAM,CAACC,MAAP,CAAcC,MAA9B;;AAEA,SAASA,MAAT,CAAgBC,UAAhB,EAA4B;AAC1BJ,EAAAA,SAAS,CAACK,IAAV,CAAe,IAAf,EAAqBD,UAArB;AACA,OAAKE,GAAL,GAAW;AACTC,IAAAA,IAAI,EAAEN,MAAM,CAACC,MAAP,CAAcM,OADX;AAETC,IAAAA,gBAAgB,EAAE,EAFT;AAGTC,IAAAA,iBAAiB,EAAE,EAHV;AAITC,IAAAA,MAAM,EAAE,UAAUC,EAAV,EAAc;AACpB,WAAKH,gBAAL,CAAsBzO,IAAtB,CAA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","file":"src.e31bb0bc.js","sourceRoot":"../src","sourcesContent":["\n\nclass MinHeap {\n  constructor() {\n    this.heap = [];\n  }\n\n  isEmpty(){\n    return this.heap.length === 0;\n  }\n\n  swap(idx1, idx2) {\n    const tmp = this.heap[idx1];\n    this.heap[idx1] = this.heap[idx2];\n    this.heap[idx2] = tmp;\n  }\n\n  peek() {\n    return this.heap[0];\n  }\n\n  insert(element) {\n    this.heap.push(element);\n\n    let idx = this.heap.length - 1;\n\n    while (idx !== 0 && this.heap[idx][0] < this.heap[this.parent(idx)][0]) {\n      this.swap(idx, this.parent(idx));\n      idx = this.parent(idx);\n    }\n  }\n\n  extractMin() {\n    //remove ele from the front of the heap\n    const root = this.heap.shift();\n\n    //put the last element to the front of the heap and remove the last element from the\n    //heap as it is now sitting at the front of the heap\n    this.heap.unshift(this.heap[this.heap.length-1]);\n    this.heap.pop();\n\n    this.heapify(0);\n    return root;\n  }\n\n  heapify(idx) {\n    let left = this.leftChild(idx);\n    let right = this.rightChild(idx);\n    let biggest = idx;\n\n    //if left node is bigger than the current node\n    if (left < this.heap.length && this.heap[biggest][0] > this.heap[left][0]) {\n      biggest = left;\n    }\n\n    //if the right child is bigger than the curr node\n    if (right < this.heap.length && this.heap[biggest][0] > this.heap[right][0]) {\n      biggest = right;\n    }\n\n    //if the value of the smallest has changed, then swap\n    if (biggest != idx) {\n      this.swap(biggest, idx);\n      this.heapify(biggest);\n    }\n  }\n\n  leftChild = index => index * 2 + 1;\n  rightChild = index => index * 2 + 2;\n  parent = index => Math.floor((index - 1) / 2);\n}\n\n\n\nexport { MinHeap }","import { MinHeap } from './modules/heap.js';\n\n//background representation of displayed grid\nlet grid = [];\ngrid.animationSpeed = 5;\ngrid.canMutate = true;\ngrid.previousAlgo = null;\n\nconst gridSizeSlider = document.querySelector('#grid-size-slider');\nconst gridWrapper = document.querySelector('.visualiser');\nconst clearBtn = document.querySelector('#clear-board');\nconst animationSpeedBtn = document.querySelector('#animation-speed');\n\nconst pathfindingDropdownBtn = document.querySelector('#pathfinding-dropdown');\nconst mazeGenDroptdownBtn = document.querySelector('#maze-dropdown');\n\nconst tutorialBtn = document.querySelector('#help');\n\n//class represents each node/vertex in grid\nclass Node {\n  constructor(id) {\n    this.id = id;\n    this.index = id.split('-').map((n) => Number(n));\n    this.x = [...this.index][1];\n    this.y = [...this.index][0];\n    this.visited = false;\n    this.isWall = false;\n    this.isStart = false;\n    this.isEnd = false;\n    this.DOMRef;\n  }\n\n  up() {\n    if (this.y <= 0) {\n      return null;\n    } else {\n      return grid[this.y - 1][this.x];\n    }\n  }\n\n  right() {\n    if (this.x >= grid[0].length - 1) {\n      return null;\n    } else {\n      return grid[this.y][this.x + 1];\n    }\n  }\n\n  down() {\n    if (this.y >= grid.length - 1) {\n      return null;\n    } else {\n      return grid[this.y + 1][this.x];\n    }\n  }\n\n  left() {\n    if (this.x <= 0) {\n      return null;\n    } else {\n      return grid[this.y][this.x - 1];\n    }\n  }\n\n  getNeighbors() {\n    return {\n      up: this.up(),\n      right: this.right(),\n      down: this.down(),\n      left: this.left(),\n    };\n  }\n\n  getNeighborsReversed() {\n    return {\n      left: this.left(),\n      down: this.down(),\n      right: this.right(),\n      up: this.up(),\n    };\n  }\n}\n\n//helper method for clearing all DOM element child nodes\nHTMLElement.prototype.empty = function () {\n  while (this.firstChild) {\n    this.removeChild(this.firstChild);\n  }\n};\n\n//----------------------------------------------------------\n//\n//\n//EVENT LISTENERS & UI FUNCTIONS\n//\n//\n//------------------------------------------------------------\n\n//initialise grid\ngrid.canMutate = false;\ncreateGrid(parseInt(gridSizeSlider.value), gridWrapper);\nsetStartEndNodes();\ngrid.canMutate = true;\n\nfunction createGrid(gridSize, visualiserWrapper) {\n  const wrapperWidth = visualiserWrapper.clientWidth;\n  const wrapperHeight = visualiserWrapper.clientHeight;\n\n  const gridWidth = gridSize;\n  const gridHeight = Math.floor(gridSize * 0.45);\n  // console.log(wrapperWidth);\n\n  const divWidth = (wrapperWidth / gridWidth).toFixed(3);\n  const divHeight = (wrapperHeight / gridHeight).toFixed(3);\n\n  for (let y = 0; y < gridHeight; y++) {\n    grid.push(new Array());\n    for (let x = 0; x < gridWidth; x++) {\n      const div = document.createElement('div');\n      div.classList.add('node');\n      div.setAttribute('id', y + '-' + x);\n      div.style.width = divWidth + 'px';\n      div.style.height = divHeight + 'px';\n      visualiserWrapper.append(div);\n\n      grid[y].push(new Node(`${y}-${x}`));\n      grid[y][x].DOMRef = div;\n    }\n  }\n}\n\n//update grid and populte dom with divs as range slider is updated and on page load\ngridSizeSlider.addEventListener('input', handleGridSizeInputSlider);\n\nfunction handleGridSizeInputSlider() {\n  if (grid.canMutate) {\n    grid.canMutate = false;\n    grid.length = 0;\n    gridWrapper.empty();\n    createGrid(parseInt(gridSizeSlider.value), gridWrapper);\n    setStartEndNodes();\n    grid.canMutate = true;\n  }\n}\n\nwindow.addEventListener('resize', handleGridSizeInputSlider);\n\npathfindingDropdownBtn.addEventListener('click', (e) => {\n  if (grid.canMutate) {\n    grid.canMutate = false;\n    switch (e.target.value) {\n      case 'a*':\n        grid.previousAlgo = 'a*';\n        clearVisited();\n        aStar();\n        break;\n      case 'dfs':\n        grid.previousAlgo = 'dfs';\n        clearVisited();\n        depthFirstSearch();\n        break;\n      case 'bfs':\n        grid.previousAlgo = 'bfs';\n        clearVisited();\n        breadthFirstSearch();\n        break;\n      case 'gbfs':\n        grid.previousAlgo = 'gbfs';\n        clearVisited();\n        greedyBreadthFirstSearch();\n        break;\n      case 'bdbfs':\n        grid.previousAlgo = 'bdbfs';\n        clearVisited();\n        biDirectionalBreadthFirstSearch();\n        break;\n\n      default:\n        return;\n    }\n  }\n});\n\nmazeGenDroptdownBtn.addEventListener('click', (e) => {\n  if (grid.canMutate) {\n    grid.canMutate = false;\n    switch (e.target.id) {\n      case 'recursive-backtracker':\n        clearBoard();\n        generateMazeRecursiveBacktracker(5, 5);\n        break;\n      case 'recursive-division':\n        clearBoard();\n        generateWallsRecursiveDivision();\n        break;\n      case 'random-walls':\n        clearBoard();\n        generateWallsRandom();\n        break;\n      default:\n        return;\n    }\n  }\n});\n\nanimationSpeedBtn.addEventListener('click', (e) => {\n  switch (e.target.value) {\n    case 'fast':\n      //change from fast to slow on click\n      e.target.value = 'slow';\n      e.target.innerHTML = 'Animations: Slow';\n      grid.animationSpeed = 15;\n      break;\n\n    case 'slow':\n      //change from slow to none on click\n      e.target.value = 'instant';\n      e.target.innerHTML = 'Animations: None';\n      grid.animationSpeed = 0;\n      break;\n\n    default:\n      //change from none to fast on click\n      e.target.value = 'fast';\n      e.target.innerHTML = 'Animations: Fast';\n      grid.animationSpeed = 5;\n      break;\n  }\n});\n\nclearBtn.addEventListener('click', () => {\n  if (grid.canMutate) {\n    grid.previousAlgo = null;\n    clearBoard();\n  }\n});\n\nfunction clearBoard() {\n  grid.map((row) =>\n    row.map((node) => {\n      node.isWall = false;\n      node.visited = false;\n      node.DOMRef.classList.remove('wall-node');\n      node.DOMRef.classList.remove('visited');\n      node.DOMRef.classList.remove('path-node');\n    })\n  );\n}\n\nfunction clearVisited() {\n  grid.map((row) =>\n    row.map((node) => {\n      node.visited = false;\n      node.DOMRef.classList.remove('visited');\n      node.DOMRef.classList.remove('path-node');\n    })\n  );\n}\n\nfunction setStartEndNodes() {\n  const gridWidth = grid[0].length - 1;\n  const gridHeight = grid.length - 1;\n\n  const startAndEndY = Math.floor(gridHeight / 2);\n  const startX = Math.floor(0.15 * gridWidth);\n  const endX = Math.ceil(0.85 * gridWidth);\n\n  grid[startAndEndY][startX].isStart = true;\n  grid[startAndEndY][startX].DOMRef.classList.add('start-node');\n  grid.startNode = [startAndEndY, startX];\n\n  grid[startAndEndY][endX].isEnd = true;\n  grid[startAndEndY][endX].DOMRef.classList.add('end-node');\n  grid.endNode = [startAndEndY, endX];\n}\n\n//inital value\nlet prevEle = gridWrapper.querySelector('div[id=\"0-0\"]');\n\ngridWrapper.addEventListener('mousedown', handleMousedown);\n\nfunction handleMousedown(e) {\n  e.preventDefault();\n  if (!e.target.classList.contains('visualiser') && grid.canMutate) {\n    const DOMEle = e.target;\n    const isWall = e.target.classList.contains('wall-node');\n    const isStart = e.target.classList.contains('start-node');\n    const isEnd = e.target.classList.contains('end-node');\n\n    if (e.buttons === 1 && !isWall && !isStart && !isEnd) {\n      gridWrapper\n        .querySelector(`div[id=\"${DOMEle.id}\"]`)\n        .classList.add('wall-node');\n      const gridCoords = DOMEle.id.split('-');\n      grid[gridCoords[0]][gridCoords[1]].isWall = true;\n      prevEle = DOMEle;\n    } else if (e.buttons === 1 && isWall && !isStart && !isEnd) {\n      gridWrapper\n        .querySelector(`div[id=\"${DOMEle.id}\"]`)\n        .classList.remove('wall-node');\n      const gridCoords = DOMEle.id.split('-');\n      grid[gridCoords[0]][gridCoords[1]].isWall = false;\n      prevEle = DOMEle;\n    } else if (e.buttons === 1 && isStart) {\n      prevEle = DOMEle;\n    } else if (e.buttons === 1 && isEnd) {\n      prevEle = DOMEle;\n    }\n  }\n}\n\ngridWrapper.addEventListener('mouseover', handleMouseover);\n\nfunction handleMouseover(e) {\n  if (!e.target.classList.contains('visualiser') && grid.canMutate) {\n    const DOMEle = e.target;\n    const isWall = e.target.classList.contains('wall-node');\n    const isStart = e.target.classList.contains('start-node');\n    const isEnd = e.target.classList.contains('end-node');\n\n    if (e.target != prevEle) {\n      if (e.buttons === 1 && prevEle.classList.contains('start-node')) {\n        prevEle.classList.remove('start-node');\n        const prevGridCoords = prevEle.id.split('-');\n        grid[prevGridCoords[0]][prevGridCoords[1]].isStart = false;\n\n        const current = gridWrapper.querySelector(`div[id=\"${DOMEle.id}\"]`);\n        const gridCoords = current.id.split('-');\n\n        current.classList.add('start-node');\n        grid[gridCoords[0]][gridCoords[1]].isStart = true;\n        grid.startNode = [parseInt(gridCoords[0]), parseInt(gridCoords[1])];\n\n        current.classList.remove('wall-node');\n        grid[gridCoords[0]][gridCoords[1]].isWall = false;\n\n        prevEle = DOMEle;\n\n        if (grid.previousAlgo)\n          findPathOnStartOrEndNodeMouseDrag(grid.previousAlgo);\n      } else if (e.buttons === 1 && prevEle.classList.contains('end-node')) {\n        prevEle.classList.remove('end-node');\n        const prevGridCoords = prevEle.id.split('-');\n        grid[prevGridCoords[0]][prevGridCoords[1]].isEnd = false;\n\n        const current = gridWrapper.querySelector(`div[id=\"${DOMEle.id}\"]`);\n        const gridCoords = current.id.split('-');\n        current.classList.add('end-node');\n        grid[gridCoords[0]][gridCoords[1]].isEnd = true;\n        grid.endNode = [parseInt(gridCoords[0]), parseInt(gridCoords[1])];\n\n        current.classList.remove('wall-node');\n        grid[gridCoords[0]][gridCoords[1]].isWall = false;\n\n        prevEle = DOMEle;\n\n        if (grid.previousAlgo)\n          findPathOnStartOrEndNodeMouseDrag(grid.previousAlgo);\n      } else if (e.buttons === 1 && isWall && !isStart && !isEnd) {\n        gridWrapper\n          .querySelector(`div[id=\"${DOMEle.id}\"]`)\n          .classList.remove('wall-node');\n        const gridCoords = DOMEle.id.split('-');\n        grid[gridCoords[0]][gridCoords[1]].isWall = false;\n        prevEle = DOMEle;\n      } else if (e.buttons === 1 && !isWall && !isStart && !isEnd) {\n        gridWrapper\n          .querySelector(`div[id=\"${DOMEle.id}\"]`)\n          .classList.add('wall-node');\n        const gridCoords = DOMEle.id.split('-');\n        grid[gridCoords[0]][gridCoords[1]].isWall = true;\n        prevEle = DOMEle;\n      }\n    }\n  }\n}\n\nfunction findPathOnStartOrEndNodeMouseDrag(value) {\n  if (grid.canMutate) {\n    const prevAnimationSpeed = grid.animationSpeed;\n    grid.animationSpeed = 0;\n    switch (value) {\n      case 'a*':\n        clearVisited();\n        aStar();\n        break;\n      case 'dfs':\n        clearVisited();\n        depthFirstSearch();\n        break;\n      case 'bfs':\n        clearVisited();\n        breadthFirstSearch();\n        break;\n      case 'gbfs':\n        clearVisited();\n        greedyBreadthFirstSearch();\n        break;\n      case 'bdbfs':\n        clearVisited();\n        biDirectionalBreadthFirstSearch();\n        break;\n\n      default:\n        return;\n    }\n    grid.animationSpeed = prevAnimationSpeed;\n  }\n}\n\nconst closeTutorialBtnArray = document.querySelectorAll('.close-tutorial');\n\ntutorialBtn.addEventListener('click', () => {\n  const tutorialTransparencyLayer = document.querySelector(\n    '.tutorial-transparency-layer'\n  );\n  tutorialTransparencyLayer.classList.add('visible');\n\n  for (let closeBtn of closeTutorialBtnArray) {\n    closeBtn.addEventListener('click', () => {\n      tutorialTransparencyLayer.classList.remove('visible');\n    });\n  }\n});\n\nconst tutorialNextAndPrevBtns = document.querySelectorAll(\n  '.tutorial-switcher-btn'\n);\n\nfor (let btn of tutorialNextAndPrevBtns) {\n  btn.addEventListener('click', handleNextAndPreTutorialClick);\n}\n\nfunction handleNextAndPreTutorialClick(e) {\n  const pageChangeBtn = e.currentTarget;\n  const tutorialWrapper = document.querySelector('.tutorial-wrapper');\n\n  for (let i = 0; i < tutorialWrapper.children.length; i++) {\n    if (tutorialWrapper.children[i].classList.contains('visible')) {\n      var currVisChildIdx = i;\n      break;\n    }\n  }\n\n  tutorialWrapper.children[currVisChildIdx].classList.remove('visible');\n\n  if (pageChangeBtn.classList[0] === 'next-tutorial-slide') {\n    currVisChildIdx + 1 < tutorialWrapper.children.length\n      ? tutorialWrapper.children[currVisChildIdx + 1].classList.add('visible')\n      : tutorialWrapper.children[0].classList.add('visible');\n  } else {\n    currVisChildIdx > 0\n      ? tutorialWrapper.children[currVisChildIdx - 1].classList.add('visible')\n      : tutorialWrapper.children[\n          tutorialWrapper.children.length - 1\n        ].classList.add('visible');\n  }\n}\n\n//-----------------------------------------------------------------------------\n//\n//=============================================================================\n//\n//------------------------GRAPH ALGO'S AND HELPER FUCNTIONS--------------------\n//\n//=============================================================================s\n//\n//-----------------------------------------------------------------------------\n\nfunction randInt(max, min = 0) {\n  return Math.floor(Math.random() * (max - min + 1) + min);\n}\n\nfunction generateWallsRandom() {\n  const height = grid.length - 1;\n  const width = grid[0].length - 1;\n\n  const totalWalls = (height * width) / 3;\n  const nodesToAnimate = [];\n  nodesToAnimate.push('add wall');\n\n  for (let i = 0; i < totalWalls; i++) {\n    const y = randInt(height);\n    const x = randInt(width);\n    if (grid[y][x].isWall || grid[y][x].isStart || grid[y][x].isEnd) {\n      i--;\n    } else {\n      nodesToAnimate.push(grid[y][x]);\n    }\n  }\n  animateNodes(nodesToAnimate);\n}\n\n//-----------------------------------------------------\n//Create Walls Recursive Backtracker and heler function\n//-----------------------------------------------------\n\nfunction chooseOrientation(width, height) {\n  if (width < height) {\n    return 'horizontal';\n  } else if (height < width) {\n    return 'vertical';\n  } else {\n    return Math.floor(Math.random() * 2) ? 'horizontal' : 'vertical';\n  }\n}\n\nfunction generateWallsRecursiveDivision() {\n  const wallsToAnimate = [];\n  wallsToAnimate.push('add wall');\n  const previousHoles = grid.map((row) => row.map((node) => false));\n\n  grid.forEach((row, yIndex) =>\n    row.forEach((node, xIndex) => {\n      if (yIndex === 0 || yIndex === grid.length - 1) wallsToAnimate.push(node);\n      else if (xIndex === 0 || xIndex === row.length - 1)\n        wallsToAnimate.push(node);\n    })\n  );\n\n  // const reversedBottomRow = wallsToAnimate.splice(-grid[0].length).reverse();\n  // wallsToAnimate.concat(reversedBottomRow);\n  // console.log(wallsToAnimate);\n\n  const firstYStart = 1;\n  const firstYEnd = grid.length - 2;\n  const firstXStart = 1;\n  const firstXEnd = grid[0].length - 2;\n\n  const orientation = chooseOrientation(\n    firstXEnd - firstXStart,\n    firstYEnd - firstYStart\n  );\n  divide(firstYStart, firstYEnd, firstXStart, firstXEnd, orientation);\n  animateNodes(wallsToAnimate);\n\n  function divide(yStart, yEnd, xStart, xEnd, orient) {\n    const width = xEnd - xStart + 1;\n    const height = yEnd - yStart + 1;\n\n    //prevents walls right next to eachother\n    if (width < 2 || height < 2 || height * width < 5) return;\n\n    if (orient === 'horizontal') {\n      const yDivideCoord = randInt(yEnd - 1, yStart + 1);\n      let holeCoord;\n\n      if (previousHoles[yDivideCoord][xStart - 1]) {\n        holeCoord = xStart;\n      } else if (previousHoles[yDivideCoord][xEnd + 1]) {\n        holeCoord = xEnd;\n      } else {\n        holeCoord = Math.random() > 0.5 ? xStart : xEnd;\n        // holeCoord = randInt(xEnd, xStart);\n      }\n\n      for (let i = xStart; i <= xEnd; i++) {\n        if (\n          grid[yDivideCoord][i].isStart ||\n          grid[yDivideCoord][i].isEnd ||\n          i === holeCoord\n        ) {\n          previousHoles[yDivideCoord][i] = true;\n        }\n        if (previousHoles[yDivideCoord][i]) continue;\n\n        wallsToAnimate.push(grid[yDivideCoord][i]);\n      }\n\n      //topside\n      let orient = chooseOrientation(width, yDivideCoord - yStart);\n      divide(yStart, yDivideCoord - 1, xStart, xEnd, orient);\n\n      //bottomside\n      orient = chooseOrientation(width, yEnd - yDivideCoord);\n      divide(yDivideCoord + 1, yEnd, xStart, xEnd, orient);\n    } else {\n      const xDivideCoord = randInt(xEnd - 1, xStart + 1);\n\n      let holeCoord;\n      if (previousHoles[yStart - 1][xDivideCoord]) {\n        holeCoord = yStart;\n      } else if (previousHoles[yEnd + 1][xDivideCoord]) {\n        holeCoord = yEnd;\n      } else {\n        holeCoord = Math.random() > 0.5 ? yStart : yEnd;\n        // holeCoord = randInt(yEnd, yStart);\n      }\n\n      for (let i = yStart; i <= yEnd; i++) {\n        if (\n          grid[i][xDivideCoord].isStart ||\n          grid[i][xDivideCoord].isEnd ||\n          i === holeCoord\n        ) {\n          previousHoles[i][xDivideCoord] = true;\n        }\n        if (previousHoles[i][xDivideCoord]) continue;\n\n        wallsToAnimate.push(grid[i][xDivideCoord]);\n      }\n\n      //divide left side\n      let orient = chooseOrientation(xDivideCoord - xStart, height);\n      divide(yStart, yEnd, xStart, xDivideCoord - 1, orient);\n\n      //divide right side\n      orient = chooseOrientation(xEnd - xDivideCoord, height);\n      divide(yStart, yEnd, xDivideCoord + 1, xEnd, orient);\n    }\n  }\n}\n\n//-------------------------------------------------------------------------\n//Create walls Recursive Backtracker and helper function\n//-------------------------------------------------------------------------\n\nfunction getRecursiveBacktrackerUnvisitedNeighbors(\n  currentX,\n  currentY,\n  visited\n) {\n  let possibleNeighbors = [\n    [currentY - 2, currentX],\n    [currentY, currentX + 2],\n    [currentY + 2, currentX],\n    [currentY, currentX - 2],\n  ];\n\n  let neighbors = [];\n\n  for (let i = 0; i < possibleNeighbors.length; i++) {\n    let [y, x] = possibleNeighbors[i];\n    if (y < 0 || y > grid.length - 1 || x < 0 || x > grid[0].length - 1)\n      continue;\n    if (visited[y][x]) continue;\n\n    neighbors.push([y, x]);\n  }\n  if (neighbors.length > 0) {\n    const nextIdx = Math.floor(Math.random() * neighbors.length);\n    return neighbors[nextIdx];\n  } else {\n    return;\n  }\n}\n\nfunction generateMazeRecursiveBacktracker(startX, startY) {\n  grid.map((row) =>\n    row.map((node) => {\n      if (node.isStart || node.isEnd) return;\n\n      node.isWall = true;\n      node.DOMRef.classList.add('wall-node');\n    })\n  );\n\n  const visited = grid.map((row) => row.map((_) => false));\n  visited[startY][startX] = true;\n\n  const nodesToAddWall = [];\n  nodesToAddWall.push('remove wall');\n  const stack = [];\n  let [currentY, currentX] = [startY, startX];\n\n  while (true) {\n    let next = getRecursiveBacktrackerUnvisitedNeighbors(\n      currentX,\n      currentY,\n      visited\n    );\n    nodesToAddWall.push(grid[currentY][currentX]);\n\n    if (next) {\n      stack.push(next);\n\n      let [nextY, nextX] = next;\n      visited[nextY][nextX] = true;\n      let inbetweenWall;\n      if (currentX === nextX) {\n        if (currentY > nextY) {\n          inbetweenWall = [currentY - 1, currentX];\n        } else {\n          inbetweenWall = [currentY + 1, currentX];\n        }\n      } else if (currentY === nextY) {\n        if (currentX > nextX) {\n          inbetweenWall = [currentY, currentX - 1];\n        } else {\n          inbetweenWall = [currentY, currentX + 1];\n        }\n      }\n\n      nodesToAddWall.push(grid[inbetweenWall[0]][inbetweenWall[1]]);\n\n      currentY = nextY;\n      currentX = nextX;\n    } else {\n      if (stack.length > 0) {\n        next = stack.pop();\n\n        [currentY, currentX] = next;\n      } else {\n        break;\n      }\n    }\n  }\n  animateNodes(nodesToAddWall);\n}\n\n//horizontal manhattan distance from Greedy bfs and A* search\n\nfunction manhattanDist(yCurrent, xCurrent, yEnd, xEnd) {\n  return Math.abs(yEnd - yCurrent) + Math.abs(xEnd - xCurrent);\n}\n\nfunction greedyBreadthFirstSearch() {\n  const visitedNodesToDisplay = [];\n  visitedNodesToDisplay.push('visited');\n  const visited = grid.map((row) => row.map((node) => false));\n  const horizDist = grid.map((row) => row.map((node) => Infinity));\n  const prev = grid.map((row) => row.map((node) => null));\n\n  const priorityQueue = new MinHeap();\n  const startNode = grid[grid.startNode[0]][grid.startNode[1]];\n  const endNode = grid[grid.endNode[0]][grid.endNode[1]];\n  let currentHorizDist = manhattanDist(\n    startNode.y,\n    startNode.x,\n    endNode.y,\n    endNode.x\n  );\n\n  priorityQueue.insert([currentHorizDist, startNode]);\n\n  while (!priorityQueue.isEmpty()) {\n    const [currentHorizDist, currentNode] = priorityQueue.extractMin();\n    visited[currentNode.y][currentNode.x] = true;\n    visitedNodesToDisplay.push(currentNode);\n\n    if (currentNode === endNode) {\n      const shortestPath = getShortestPath(currentNode, prev, startNode);\n      shortestPath.unshift('path');\n      animateNodes(visitedNodesToDisplay.concat(shortestPath));\n      return;\n    }\n\n    const neighbors = Object.values(currentNode.getNeighbors()).filter((n) => {\n      if (n && !n.isWall) return n;\n    });\n\n    for (let neighbor of neighbors) {\n      if (visited[neighbor.y][neighbor.x]) continue;\n\n      let newHorizDist = manhattanDist(\n        neighbor.y,\n        neighbor.x,\n        endNode.y,\n        endNode.x\n      );\n      if (newHorizDist < horizDist[neighbor.y][neighbor.x]) {\n        horizDist[neighbor.y][neighbor.x] = newHorizDist;\n        priorityQueue.insert([newHorizDist, neighbor]);\n        prev[neighbor.y][neighbor.x] = currentNode;\n      }\n    }\n  }\n  animateNodes(visitedNodesToDisplay);\n}\n\nfunction aStar() {\n  const visitedNodesToDisplay = [];\n  const startNode = grid[grid.startNode[0]][grid.startNode[1]];\n  const endNode = grid[grid.endNode[0]][grid.endNode[1]];\n\n  const visited = grid.map((row) => row.map((node) => false));\n  const prev = grid.map((row) => row.map((node) => null));\n  const horizDist = grid.map((row) => row.map((node) => Infinity));\n\n  horizDist[startNode.y][startNode.x] = 0;\n  const weight = 1;\n  let currentHorizDist = manhattanDist(\n    startNode.y,\n    startNode.x,\n    endNode.y,\n    endNode.x\n  );\n\n  const priorityQueue = new MinHeap();\n  priorityQueue.insert([0, startNode]);\n  visitedNodesToDisplay.push('visited');\n\n  while (!priorityQueue.isEmpty()) {\n    const [currentGlobalCost, currentNode] = priorityQueue.extractMin();\n    visited[currentNode.y][currentNode.x] = true;\n    visitedNodesToDisplay.push(currentNode);\n\n    if (currentNode == endNode) {\n      const shortestPath = getShortestPath(currentNode, prev, startNode);\n      shortestPath.unshift('path');\n      animateNodes(visitedNodesToDisplay.concat(shortestPath));\n      break;\n    }\n\n    const neighbors = Object.values(currentNode.getNeighbors()).filter(\n      (n) => n && !n.isWall\n    );\n\n    for (let neighbor of neighbors) {\n      if (visited[neighbor.y][neighbor.x]) continue;\n\n      const newNeighborDist = horizDist[currentNode.y][currentNode.x] + weight;\n      const neighborHorizDist = manhattanDist(\n        neighbor.y,\n        neighbor.x,\n        endNode.y,\n        endNode.x\n      );\n      const newGlobalCost = newNeighborDist + neighborHorizDist;\n\n      if (\n        newGlobalCost <\n        horizDist[neighbor.y][neighbor.x] + neighborHorizDist\n      ) {\n        horizDist[neighbor.y][neighbor.x] = newNeighborDist;\n        priorityQueue.insert([newGlobalCost, neighbor]);\n        prev[neighbor.y][neighbor.x] = currentNode;\n      }\n    }\n  }\n  animateNodes(visitedNodesToDisplay);\n}\n\nfunction breadthFirstSearch() {\n  const queue = [];\n  const visitedNodesToDisplay = [];\n  visitedNodesToDisplay.push('visited');\n\n  const endNode = grid[grid.endNode[0]][grid.endNode[1]];\n  const startNode = grid[grid.startNode[0]][grid.startNode[1]];\n\n  const prev = grid.map((row) => row.map((n) => null));\n  const visited = grid.map((row) => row.map((n) => false));\n\n  queue.push(startNode);\n\n  while (queue.length) {\n    const currentNode = queue.shift();\n    visited[currentNode.y][currentNode.x] = true;\n\n    // nodesToDisplay.push(currentNode);\n\n    if (currentNode === endNode) {\n      const shortestPath = getShortestPath(currentNode, prev, startNode);\n      shortestPath.unshift('path');\n      animateNodes(visitedNodesToDisplay.concat(shortestPath));\n\n      return;\n    }\n\n    const neighbors = Object.values(currentNode.getNeighbors()).filter((n) => {\n      if (n && !n.isWall) return n;\n    });\n\n    for (let neighbor of neighbors) {\n      if (visited[neighbor.y][neighbor.x]) continue;\n\n      visited[neighbor.y][neighbor.x] = true;\n      visitedNodesToDisplay.push(neighbor);\n      prev[neighbor.y][neighbor.x] = currentNode;\n      queue.push(neighbor);\n    }\n  }\n  animateNodes(visitedNodesToDisplay);\n}\n\nfunction biDirectionalBreadthFirstSearch() {\n  const endNode = grid[grid.endNode[0]][grid.endNode[1]];\n  const startNode = grid[grid.startNode[0]][grid.startNode[1]];\n  const visitedNodesToDisplay = [];\n  visitedNodesToDisplay.push('visited');\n\n  const startNodeQueue = [];\n  const startNodePrev = grid.map((row) => row.map((_) => null));\n  const startVisited = grid.map((row) => row.map((_) => false));\n  startNodeQueue.push(startNode);\n\n  const endNodeQueue = [];\n  const endNodePrev = grid.map((row) => row.map((_) => null));\n  const endVisited = grid.map((row) => row.map((_) => false));\n  endNodeQueue.push(endNode);\n\n  while (endNodeQueue.length && startNodeQueue.length) {\n    const currentEndNode = endNodeQueue.shift();\n    const currentStartNode = startNodeQueue.shift();\n    let intersection;\n\n    for (let y = 0; y < startVisited.length; y++) {\n      for (let x = 0; x < startVisited[0].length; x++) {\n        if (startVisited[y][x] && endVisited[y][x]) {\n          intersection = grid[y][x];\n          break;\n        }\n      }\n    }\n\n    if (intersection) {\n      const shortestPathStart = getShortestPath(\n        intersection,\n        startNodePrev,\n        startNode\n      );\n      shortestPathStart.unshift('path');\n      shortestPathStart.push(intersection);\n\n      const shortestPathEnd = getShortestPath(\n        intersection,\n        endNodePrev,\n        endNode\n      );\n\n      const pathNodesToDisplay = shortestPathStart.concat(\n        shortestPathEnd.reverse()\n      );\n      animateNodes(visitedNodesToDisplay.concat(pathNodesToDisplay));\n      return;\n    }\n\n    const startNeighbors = Object.values(\n      currentStartNode.getNeighbors()\n    ).filter((n) => n && !n.isWall);\n    const endNeighbors = Object.values(\n      currentEndNode.getNeighborsReversed()\n    ).filter((n) => n && !n.isWall);\n\n    for (let neighbor of startNeighbors) {\n      if (startVisited[neighbor.y][neighbor.x]) continue;\n\n      startVisited[neighbor.y][neighbor.x] = true;\n      visitedNodesToDisplay.push(neighbor);\n      startNodePrev[neighbor.y][neighbor.x] = currentStartNode;\n      startNodeQueue.push(neighbor);\n    }\n\n    for (let neighbor of endNeighbors) {\n      if (endVisited[neighbor.y][neighbor.x]) continue;\n\n      endVisited[neighbor.y][neighbor.x] = true;\n      visitedNodesToDisplay.push(neighbor);\n      endNodePrev[neighbor.y][neighbor.x] = currentEndNode;\n      endNodeQueue.push(neighbor);\n    }\n  }\n\n  animateNodes(visitedNodesToDisplay);\n}\n\nfunction depthFirstSearch() {\n  const stack = [];\n  const visitedNodesToDisplay = [];\n  visitedNodesToDisplay.push('visited');\n\n  const endNode = grid[grid.endNode[0]][grid.endNode[1]];\n  const startNode = grid[grid.startNode[0]][grid.startNode[1]];\n\n  const prev = grid.map((row) => row.map(() => null));\n  const visited = grid.map((row) => row.map(() => false));\n  visited[startNode.y][startNode.x];\n\n  stack.push(startNode);\n\n  while (stack.length) {\n    const currentNode = stack.pop();\n    visited[currentNode.y][currentNode.x] = true;\n    visitedNodesToDisplay.push(currentNode);\n\n    if (currentNode == endNode) {\n      const shortestPath = getShortestPath(currentNode, prev, startNode);\n      shortestPath.unshift('path');\n      animateNodes(visitedNodesToDisplay.concat(shortestPath));\n      return;\n    }\n\n    const neighbors = Object.values(currentNode.getNeighbors()).filter((n) => {\n      if (n && !n.isWall) return n;\n    });\n\n    for (let neighbor of neighbors) {\n      if (visited[neighbor.y][neighbor.x]) continue;\n\n      prev[neighbor.y][neighbor.x] = currentNode;\n      stack.push(neighbor);\n      // break;\n    }\n  }\n  animateNodes(visitedNodesToDisplay);\n}\n\nfunction getShortestPath(currentNode, prevArray, startNode) {\n  const shortestPath = [];\n  while (true) {\n    if (prevArray[currentNode.y][currentNode.x] == startNode) break;\n\n    shortestPath.unshift(prevArray[currentNode.y][currentNode.x]);\n    currentNode = prevArray[currentNode.y][currentNode.x];\n  }\n  return shortestPath;\n}\n\nfunction animateNodes(nodesArray) {\n  const removeWallAnimation = [\n    { transform: 'scale(1.2)', offset: 0.75 },\n    { backgroundColor: 'hsl(0, 0%, 100%)' },\n  ];\n  const wallAnimation = [\n    { transform: 'scale(1.2)', offset: 0.75 },\n    { backgroundColor: 'hsla(240, 23%, 8%, 0.9)' },\n  ];\n  const visitedAnimation = [\n    { transform: 'scale(.2)' },\n    {\n      borderRadius: '50%',\n      backgroundColor: 'hsl(281, 53%, 24%)',\n      offset: 0.25,\n    },\n    { transform: 'scale(1.2)', offset: 0.7 },\n  ];\n  const pathAnimation = [\n    { transform: 'scale(.5)' },\n    { backgroundColor: 'hsla(115, 41%, 30%, 0.397)', offset: 0.5 },\n    { transform: 'scale(1.2)', offset: 0.75 },\n  ];\n\n  const speed = grid.animationSpeed;\n  let nodeTypeToAnimate;\n\n  for (let i = 0; i < nodesArray.length; i++) {\n    const currentNode = nodesArray[i];\n\n    if (typeof currentNode === 'string') {\n      nodeTypeToAnimate = currentNode;\n      continue;\n    }\n\n    if (nodeTypeToAnimate === 'add wall') {\n      if (speed === 0) {\n        currentNode.isWall = true;\n        currentNode.DOMRef.classList.add('wall-node');\n        if (i === nodesArray.length - 1) grid.canMutate = true;\n      } else {\n        setTimeout(() => {\n          currentNode.isWall = true;\n          currentNode.DOMRef.classList.add('wall-node');\n\n          currentNode.DOMRef.animate(wallAnimation, 400);\n          if (i === nodesArray.length - 1) grid.canMutate = true;\n        }, speed * i);\n      }\n    } else if (nodeTypeToAnimate === 'remove wall') {\n      if (speed === 0) {\n        currentNode.isWall = false;\n        currentNode.DOMRef.classList.remove('wall-node');\n        if (i === nodesArray.length - 1) grid.canMutate = true;\n      } else {\n        setTimeout(() => {\n          currentNode.isWall = false;\n          currentNode.DOMRef.classList.remove('wall-node');\n          currentNode.DOMRef.animate(removeWallAnimation, 400);\n          if (i === nodesArray.length - 1) grid.canMutate = true;\n        }, speed * i);\n      }\n    } else if (nodeTypeToAnimate === 'visited') {\n      if (speed === 0) {\n        currentNode.visited = true;\n        currentNode.DOMRef.classList.add('visited');\n        if (i === nodesArray.length - 1 && !nodesArray.includes('path')) {\n          grid.canMutate = true;\n        }\n      } else {\n        setTimeout(() => {\n          currentNode.visited = true;\n          currentNode.DOMRef.classList.add('visited');\n          currentNode.DOMRef.animate(visitedAnimation, 500);\n          if (i === nodesArray.length - 1 && !nodesArray.includes('path')) {\n            grid.canMutate = true;\n          }\n        }, speed * i);\n      }\n    } else if (nodeTypeToAnimate === 'path') {\n      if (speed === 0) {\n        currentNode.DOMRef.classList.add('path-node');\n        if (i === nodesArray.length - 1) grid.canMutate = true;\n      } else {\n        setTimeout(() => {\n          currentNode.DOMRef.classList.add('path-node');\n          currentNode.DOMRef.animate(pathAnimation, 500);\n          if (i === nodesArray.length - 1) grid.canMutate = true;\n        }, speed * i);\n      }\n    }\n  }\n}\n\n/* function djikstra() {\n  const visited = grid.map(row => row.map(node => false));\n  const weight = grid.map(row => row.map(node => (node.isWeight) ? 10 : 1 ));\n  const dist = grid.map(row => row.map(node => Infinity));\n  const prev = grid.map(row => row.map(node => null));\n  const visitedNodesToDisplay = [];\n\n  const startNode = grid[grid.startNode[0]][grid.startNode[1]];\n  const endNode = grid[grid.endNode[0]][grid.endNode[1]];\n\n  dist[startNode.y][startNode.x] = 0;\n  const priorityQueue = new MinHeap;\n\n  priorityQueue.insert([0, startNode]);\n\n  while (!priorityQueue.isEmpty()) {\n    const [currentDist, currentNode] = priorityQueue.extractMin();\n    visited[currentNode.y][currentNode.x] = true;\n    visitedNodesToDisplay.push(currentNode);\n    console.log(priorityQueue.heap);\n\n\n\n    if (currentNode == endNode) {\n      animateNodes(visitedNodesToDisplay, 'visited');\n      console.log(prev);\n      break;\n    }\n\n    const neighbors = Object.values(currentNode.getNeighbors()).filter(n => {\n      if (n && !n.isWall) return n;\n    });\n\n    for (const neighbor of neighbors) {\n      if (visited[neighbor.y][neighbor.x]) {\n        console.log('passed');\n        continue;\n      }\n\n      let newDistance = currentDist + weight[neighbor.y][neighbor.x];\n\n      if (newDistance < dist[neighbor.y][neighbor.x]) {\n        dist[neighbor.y][neighbor.x] = newDistance;\n        priorityQueue.insert([newDistance, neighbor]);\n        prev[neighbor.y][neighbor.x] = currentNode;\n      }\n    }\n  }\n\n} */\n\n//incase I find out how to stop two animateNodes loop running\n//at the same time\n/* function animateNodes(nodesArray, type, reverse = false) {\n  const speed = grid.animationSpeed;\n\n  switch (type) {\n    case 'wall':\n      let wallAnimation;\n      reverse\n        ? (wallAnimation = [\n            { transform: 'scale(1.2)', offset: 0.75 },\n            { backgroundColor: 'hsl(0, 0%, 100%)' },\n          ])\n        : [\n            { transform: 'scale(1.2)', offset: 0.75 },\n            { backgroundColor: 'hsla(240, 23%, 8%, 0.9)' },\n          ];\n\n      for (let i = 0; i < nodesArray.length; i++) {\n        const currentNode = nodesArray[i];\n        if (speed === 0) {\n          reverse ? (currentNode.isWall = false) : (currentNode.isWall = true);\n          reverse\n            ? currentNode.DOMRef.classList.remove('wall-node')\n            : currentNode.DOMRef.classList.add('wall-node');\n          reverse\n            ? currentNode.DOMRef.animate(wallAnimation, 400)\n            : currentNode.DOMRef.animate(wallAnimation, 400);\n        } else {\n          setTimeout(() => {\n            reverse\n              ? (currentNode.isWall = false)\n              : (currentNode.isWall = true);\n            reverse\n              ? currentNode.DOMRef.classList.remove('wall-node')\n              : currentNode.DOMRef.classList.add('wall-node');\n            reverse\n              ? currentNode.DOMRef.animate(wallAnimation, 400)\n              : currentNode.DOMRef.animate(wallAnimation, 400);\n          }, speed * i);\n        }\n      }\n      return true;\n\n    case 'visited':\n      const visitedAnimation = [\n        { transform: 'scale(.2)' },\n        {\n          borderRadius: '50%',\n          backgroundColor: 'hsl(281, 53%, 24%)',\n          offset: 0.25,\n        },\n        { transform: 'scale(1.2)', offset: 0.7 },\n      ];\n\n      for (let i = 0; i < nodesArray.length; i++) {\n        const currentNode = nodesArray[i];\n        if (speed === 0) {\n          currentNode.visited = true;\n          currentNode.DOMRef.classList.add('visited');\n        } else {\n          setTimeout(() => {\n            console.log(i, nodesArray.length);\n            currentNode.visited = true;\n            currentNode.DOMRef.classList.add('visited');\n            currentNode.DOMRef.animate(visitedAnimation, 400);\n          }, speed * i);\n        }\n      }\n      return true;\n\n    case 'path':\n      const pathAnimation = [\n        { transform: 'scale(.5)' },\n        { backgroundColor: 'hsla(115, 41%, 30%, 0.397)', offset: 0.5 },\n        { transform: 'scale(1.2)', offset: 0.75 },\n      ];\n      for (let i = 0; i < nodesArray.length; i++) {\n        const node = nodesArray[i];\n        if (speed === 0) {\n          node.DOMRef.classList.add('path-node');\n        } else {\n          setTimeout(() => {\n            node.DOMRef.classList.add('path-node');\n            node.DOMRef.animate(pathAnimation, 400);\n          }, speed * i);\n        }\n      }\n\n    default:\n      return;\n  }\n} */\n","var OVERLAY_ID = '__parcel__error__overlay__';\n\nvar OldModule = module.bundle.Module;\n\nfunction Module(moduleName) {\n  OldModule.call(this, moduleName);\n  this.hot = {\n    data: module.bundle.hotData,\n    _acceptCallbacks: [],\n    _disposeCallbacks: [],\n    accept: function (fn) {\n      this._acceptCallbacks.push(fn || function () {});\n    },\n    dispose: function (fn) {\n      this._disposeCallbacks.push(fn);\n    }\n  };\n\n  module.bundle.hotData = null;\n}\n\nmodule.bundle.Module = Module;\nvar checkedAssets, assetsToAccept;\n\nvar parent = module.bundle.parent;\nif ((!parent || !parent.isParcelRequire) && typeof WebSocket !== 'undefined') {\n  var hostname = process.env.HMR_HOSTNAME || location.hostname;\n  var protocol = location.protocol === 'https:' ? 'wss' : 'ws';\n  var ws = new WebSocket(protocol + '://' + hostname + ':' + process.env.HMR_PORT + '/');\n  ws.onmessage = function(event) {\n    checkedAssets = {};\n    assetsToAccept = [];\n\n    var data = JSON.parse(event.data);\n\n    if (data.type === 'update') {\n      var handled = false;\n      data.assets.forEach(function(asset) {\n        if (!asset.isNew) {\n          var didAccept = hmrAcceptCheck(global.parcelRequire, asset.id);\n          if (didAccept) {\n            handled = true;\n          }\n        }\n      });\n\n      // Enable HMR for CSS by default.\n      handled = handled || data.assets.every(function(asset) {\n        return asset.type === 'css' && asset.generated.js;\n      });\n\n      if (handled) {\n        console.clear();\n\n        data.assets.forEach(function (asset) {\n          hmrApply(global.parcelRequire, asset);\n        });\n\n        assetsToAccept.forEach(function (v) {\n          hmrAcceptRun(v[0], v[1]);\n        });\n      } else if (location.reload) { // `location` global exists in a web worker context but lacks `.reload()` function.\n        location.reload();\n      }\n    }\n\n    if (data.type === 'reload') {\n      ws.close();\n      ws.onclose = function () {\n        location.reload();\n      }\n    }\n\n    if (data.type === 'error-resolved') {\n      console.log('[parcel] ✨ Error resolved');\n\n      removeErrorOverlay();\n    }\n\n    if (data.type === 'error') {\n      console.error('[parcel] 🚨  ' + data.error.message + '\\n' + data.error.stack);\n\n      removeErrorOverlay();\n\n      var overlay = createErrorOverlay(data);\n      document.body.appendChild(overlay);\n    }\n  };\n}\n\nfunction removeErrorOverlay() {\n  var overlay = document.getElementById(OVERLAY_ID);\n  if (overlay) {\n    overlay.remove();\n  }\n}\n\nfunction createErrorOverlay(data) {\n  var overlay = document.createElement('div');\n  overlay.id = OVERLAY_ID;\n\n  // html encode message and stack trace\n  var message = document.createElement('div');\n  var stackTrace = document.createElement('pre');\n  message.innerText = data.error.message;\n  stackTrace.innerText = data.error.stack;\n\n  overlay.innerHTML = (\n    '<div style=\"background: black; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; opacity: 0.85; font-family: Menlo, Consolas, monospace; z-index: 9999;\">' +\n      '<span style=\"background: red; padding: 2px 4px; border-radius: 2px;\">ERROR</span>' +\n      '<span style=\"top: 2px; margin-left: 5px; position: relative;\">🚨</span>' +\n      '<div style=\"font-size: 18px; font-weight: bold; margin-top: 20px;\">' + message.innerHTML + '</div>' +\n      '<pre>' + stackTrace.innerHTML + '</pre>' +\n    '</div>'\n  );\n\n  return overlay;\n\n}\n\nfunction getParents(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return [];\n  }\n\n  var parents = [];\n  var k, d, dep;\n\n  for (k in modules) {\n    for (d in modules[k][1]) {\n      dep = modules[k][1][d];\n      if (dep === id || (Array.isArray(dep) && dep[dep.length - 1] === id)) {\n        parents.push(k);\n      }\n    }\n  }\n\n  if (bundle.parent) {\n    parents = parents.concat(getParents(bundle.parent, id));\n  }\n\n  return parents;\n}\n\nfunction hmrApply(bundle, asset) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (modules[asset.id] || !bundle.parent) {\n    var fn = new Function('require', 'module', 'exports', asset.generated.js);\n    asset.isNew = !modules[asset.id];\n    modules[asset.id] = [fn, asset.deps];\n  } else if (bundle.parent) {\n    hmrApply(bundle.parent, asset);\n  }\n}\n\nfunction hmrAcceptCheck(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (!modules[id] && bundle.parent) {\n    return hmrAcceptCheck(bundle.parent, id);\n  }\n\n  if (checkedAssets[id]) {\n    return;\n  }\n  checkedAssets[id] = true;\n\n  var cached = bundle.cache[id];\n\n  assetsToAccept.push([bundle, id]);\n\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    return true;\n  }\n\n  return getParents(global.parcelRequire, id).some(function (id) {\n    return hmrAcceptCheck(global.parcelRequire, id)\n  });\n}\n\nfunction hmrAcceptRun(bundle, id) {\n  var cached = bundle.cache[id];\n  bundle.hotData = {};\n  if (cached) {\n    cached.hot.data = bundle.hotData;\n  }\n\n  if (cached && cached.hot && cached.hot._disposeCallbacks.length) {\n    cached.hot._disposeCallbacks.forEach(function (cb) {\n      cb(bundle.hotData);\n    });\n  }\n\n  delete bundle.cache[id];\n  bundle(id);\n\n  cached = bundle.cache[id];\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    cached.hot._acceptCallbacks.forEach(function (cb) {\n      cb();\n    });\n    return true;\n  }\n}\n"]}