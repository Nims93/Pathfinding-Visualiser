{"version":3,"sources":["modules/heap.js","index.js","../node_modules/parcel-bundler/src/builtins/hmr-runtime.js"],"names":["MinHeap","index","Math","floor","heap","length","idx1","idx2","tmp","element","push","idx","parent","swap","root","shift","unshift","pop","heapify","left","leftChild","right","rightChild","biggest","grid","animationSpeed","inUse","gridSizeSlider","document","querySelector","gridWrapper","clearBtn","animationSpeedBtn","pathfindingDropdownBtn","mazeGenDroptdownBtn","Node","id","split","map","x","Number","y","visited","isWall","isStart","isEnd","DOMRef","up","down","HTMLElement","prototype","empty","firstChild","removeChild","createGrid","parseInt","value","setStartEndNodes","addEventListener","handleRangeInputSlider","window","e","target","clearVisited","aStar","depthFirstSearch","breadthFirstSearch","greedyBreadthFirstSearch","biDirectionalBreadthFirstSearch","clearButton","generateMazeRecursiveBacktracker","generateWallsRecursiveDivisionRedone","generateWallsRandom","innerHTML","row","node","classList","remove","gridWidth","gridHeight","startAndEndY","startX","endX","ceil","add","startNode","endNode","prevEle","handleMousedown","preventDefault","contains","DOMEle","buttons","gridCoords","handleMouseover","prevGridCoords","current","randInt","max","min","random","gridSize","wrapper","wrapperWidth","offsetWidth","wrapperHeight","offsetHeight","round","divWidth","toFixed","divHeight","Array","div","createElement","setAttribute","style","width","height","append","totalWalls","nodesToAnimate","i","animateNodes","generateWallsPerimiter","index1","index2","flat","filter","n","chooseOrientation","wallsToAnimate","previousHoles","forEach","yIndex","xIndex","firstYStart","firstYEnd","firstXStart","firstXEnd","orientation","divide","yStart","yEnd","xStart","xEnd","orient","yDivideCoord","holeCoord","xDivideCoord","manhattanDist","yCurrent","xCurrent","abs","visitedNodesToDisplay","horizDist","Infinity","prev","priorityQueue","currentHorizDist","insert","isEmpty","extractMin","currentNode","shortestPath","getShortestPath","neighbors","Object","values","getNeighbors","neighbor","newHorizDist","weight","currentGlobalCost","newNeighborDist","neighborHorizDist","newGlobalCost","queue","nodesToDisplay","startNodeQueue","startNodePrev","_","startVisited","endNodeQueue","endNodePrev","endVisited","currentEndNode","currentStartNode","intersection","shortestPathStart","shortestPathEnd","concat","reverse","startNeighbors","endNeighbors","getNeighborsReversed","stack","nodesArray","type","speed","wallAnimation","transform","offset","backgroundColor","animate","setTimeout","visitedAnimation","borderRadius","pathAnimation","getRecursiveBacktrackerUnvisitedNeighbors","currentX","currentY","possibleNeighbors","nextIdx","startY","nodesToAddWall","next","console","log","nextY","nextX","inbetweenWall","OVERLAY_ID","OldModule","module","bundle","Module","moduleName","call","hot","data","hotData","_acceptCallbacks","_disposeCallbacks","accept","fn","dispose","checkedAssets","assetsToAccept","isParcelRequire","WebSocket","hostname","location","protocol","ws","onmessage","event","JSON","parse","handled","assets","asset","isNew","didAccept","hmrAcceptCheck","global","parcelRequire","every","generated","js","clear","hmrApply","v","hmrAcceptRun","reload","close","onclose","removeErrorOverlay","error","message","overlay","createErrorOverlay","body","appendChild","getElementById","stackTrace","innerText","getParents","modules","parents","k","d","dep","isArray","Function","deps","cached","cache","some","cb"],"mappings":"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","file":"src.e31bb0bc.js","sourceRoot":"../src","sourcesContent":["\n\nclass MinHeap {\n  constructor() {\n    this.heap = [];\n  }\n\n  isEmpty(){\n    return this.heap.length === 0;\n  }\n\n  swap(idx1, idx2) {\n    const tmp = this.heap[idx1];\n    this.heap[idx1] = this.heap[idx2];\n    this.heap[idx2] = tmp;\n  }\n\n  peek() {\n    return this.heap[0];\n  }\n\n  insert(element) {\n    this.heap.push(element);\n\n    let idx = this.heap.length - 1;\n\n    while (idx !== 0 && this.heap[idx][0] < this.heap[this.parent(idx)][0]) {\n      this.swap(idx, this.parent(idx));\n      idx = this.parent(idx);\n    }\n  }\n\n  extractMin() {\n    //remove ele from the front of the heap\n    const root = this.heap.shift();\n\n    //put the last element to the front of the heap and remove the last element from the\n    //heap as it is now sitting at the front of the heap\n    this.heap.unshift(this.heap[this.heap.length-1]);\n    this.heap.pop();\n\n    this.heapify(0);\n    return root;\n  }\n\n  heapify(idx) {\n    let left = this.leftChild(idx);\n    let right = this.rightChild(idx);\n    let biggest = idx;\n\n    //if left node is bigger than the current node\n    if (left < this.heap.length && this.heap[biggest][0] > this.heap[left][0]) {\n      biggest = left;\n    }\n\n    //if the right child is bigger than the curr node\n    if (right < this.heap.length && this.heap[biggest][0] > this.heap[right][0]) {\n      biggest = right;\n    }\n\n    //if the value of the smallest has changed, then swap\n    if (biggest != idx) {\n      this.swap(biggest, idx);\n      this.heapify(biggest);\n    }\n  }\n\n  leftChild = index => index * 2 + 1;\n  rightChild = index => index * 2 + 2;\n  parent = index => Math.floor((index - 1) / 2);\n}\n\n\n\nexport { MinHeap }","import { MinHeap } from './modules/heap.js'\n\n//internal representation of the data\nlet grid = [];\ngrid.animationSpeed = 0;\ngrid.inUse = false;\n\nconst gridSizeSlider = document.querySelector(\"#grid-size-slider\");\nconst gridWrapper = document.querySelector(\".visualiser\");\nconst clearBtn = document.querySelector('#clear-board');\nconst animationSpeedBtn = document.querySelector('#animation-speed');\n\nconst pathfindingDropdownBtn = document.querySelector('#pathfinding-dropdown');\nconst mazeGenDroptdownBtn = document.querySelector('#maze-dropdown');\n\nclass Node {\n  constructor(id) {\n    this.id = id;\n    this.index = id.split(\"-\").map(x => Number(x));\n    this.x = [...this.index][1];\n    this.y = [...this.index][0];\n    this.visited = false;\n    this.isWall = false;\n    this.isStart = false;\n    this.isEnd = false;\n    this.DOMRef;\n  }\n\n  up() {\n    if (this.y <= 0) {\n      return null;\n    } else {\n      return grid[this.y - 1][this.x];\n    }\n  }\n\n  right() {\n    if (this.x >= grid[0].length - 1) {\n      return null;\n    } else {\n      return grid[this.y][this.x + 1];\n    }\n  }\n\n  down() {\n    if (this.y >= grid.length - 1) {\n      return null;\n    } else {\n      return grid[this.y + 1][this.x];\n    }\n  }\n\n  left() {\n    if (this.x <= 0) {\n      return null;\n    } else {\n      return grid[this.y][this.x - 1];\n    }\n  }\n\n  getNeighbors() {\n    return {\n      up: this.up(),\n      right: this.right(),\n      down: this.down(),\n      left: this.left()\n    };\n  }\n\n  getNeighborsReversed() {\n    return {\n      left: this.left(),\n      down: this.down(),\n      right: this.right(),\n      up: this.up()\n    }\n  }\n}\n\n//helper method for clearing all DOM element child nodes\nHTMLElement.prototype.empty = function () {\n  while (this.firstChild) {\n    this.removeChild(this.firstChild);\n  }\n};\n\n\n\n//---------------\n//\n//EVENT LISTENERS\n//\n//---------------\n\n\n//initialise grid\ncreateGrid(parseInt(gridSizeSlider.value), gridWrapper);\nsetStartEndNodes();\n\n//update grid and populte dom with divs as range slider is updated and on page load\ngridSizeSlider.addEventListener(\"input\", handleRangeInputSlider);\n\nfunction handleRangeInputSlider() {\n  grid.length = 0;\n  gridWrapper.empty();\n  createGrid(Number(gridSizeSlider.value), gridWrapper);\n  setStartEndNodes();\n}\n\nwindow.addEventListener('resize', handleRangeInputSlider);\n\npathfindingDropdownBtn.addEventListener('click', e => {\n  switch (e.target.value) {\n    case \"a*\":\n      clearVisited();\n      aStar();\n      break;\n    case \"dfs\":\n      clearVisited();\n      depthFirstSearch()\n      break;\n    case \"bfs\":\n      clearVisited();\n      breadthFirstSearch();\n      break;\n    case \"gbfs\":\n      clearVisited();\n      greedyBreadthFirstSearch();\n      break;\n    case \"bdbfs\":\n      clearVisited();\n      biDirectionalBreadthFirstSearch();\n      break;\n\n    default:\n      return;\n  }\n});\n\nmazeGenDroptdownBtn.addEventListener('click', e => {\n  switch (e.target.id) {\n    case 'recursive-backtracker':\n      clearButton();\n      generateMazeRecursiveBacktracker(5, 5);\n      break;\n    case 'recursive-division':\n      clearButton();\n      generateWallsRecursiveDivisionRedone();\n      break;\n    case 'random-walls':\n      clearButton();\n      generateWallsRandom();\n      break;\n    default:\n      return;\n  }\n});\n\nanimationSpeedBtn.addEventListener('click', e => {\n  switch (e.target.value) {\n    case 'fast':\n      //change from fastto slow on click\n      e.target.value = 'slow';\n      e.target.innerHTML = 'Animation Speed: Slow'\n      grid.animationSpeed = 15;\n      break;\n\n    case 'slow':\n      //change from slow to none on click\n      e.target.value = 'instant';\n      e.target.innerHTML = 'Animation Speed: None';\n      grid.animationSpeed = 0;\n      break;\n\n    default:\n      //change from instant to fast on click\n      e.target.value = 'fast';\n      e.target.innerHTML = 'Animation Speed: Fast';\n      grid.animationSpeed = 5;\n      break;\n  }\n});\n\nclearBtn.addEventListener('click', clearButton);\n\nfunction clearButton() {\n  grid.map(row => row.map(node => {\n    node.isWall = false;\n    node.visited = false;\n    node.DOMRef.classList.remove('wall-node');\n    node.DOMRef.classList.remove('visited');\n    node.DOMRef.classList.remove('path-node');\n  }))\n}\n\nfunction clearVisited() {\n  grid.map(row => row.map(node => {\n    node.visited = false;\n    node.DOMRef.classList.remove('visited');\n    node.DOMRef.classList.remove('path-node');\n  }))\n}\n\n\n\nfunction setStartEndNodes() {\n  const gridWidth = grid[0].length - 1;\n  const gridHeight = grid.length - 1\n\n  const startAndEndY = Math.floor(gridHeight / 2);\n  const startX = Math.floor(0.15 * gridWidth);\n  const endX = Math.ceil(0.85 * gridWidth);\n\n  grid[startAndEndY][startX].isStart = true;\n  grid[startAndEndY][startX].DOMRef.classList.add('start-node');\n  grid.startNode = [startAndEndY, startX];\n\n  grid[startAndEndY][endX].isEnd = true;\n  grid[startAndEndY][endX].DOMRef.classList.add('end-node');\n  grid.endNode = [startAndEndY, endX];\n\n}\n\n\n\n//inital value. would prefer to initialise to nothing but is janky unless I do this\nlet prevEle = gridWrapper.querySelector('div[id=\"0-0\"]');\n\ngridWrapper.addEventListener('mousedown', handleMousedown);\n\nfunction handleMousedown(e) {\n  e.preventDefault();\n  if (!e.target.classList.contains('visualiser')) {\n    const DOMEle = e.target;\n    const isWall = e.target.classList.contains('wall-node');\n    const isStart = e.target.classList.contains('start-node');\n    const isEnd = e.target.classList.contains('end-node');\n\n    if (e.buttons === 1 && !isWall && !isStart && !isEnd) {\n      gridWrapper.querySelector(`div[id=\"${DOMEle.id}\"]`).classList.add('wall-node');\n      const gridCoords = DOMEle.id.split('-');\n      grid[gridCoords[0]][gridCoords[1]].isWall = true;\n      prevEle = DOMEle;\n    } else if (e.buttons === 1 && isWall && !isStart && !isEnd) {\n      gridWrapper.querySelector(`div[id=\"${DOMEle.id}\"]`).classList.remove('wall-node');\n      const gridCoords = DOMEle.id.split('-');\n      grid[gridCoords[0]][gridCoords[1]].isWall = false;\n      prevEle = DOMEle;\n    } else if (e.buttons === 1 && isStart) {\n      prevEle = DOMEle;\n    } else if (e.buttons === 1 && isEnd) {\n      prevEle = DOMEle;\n    }\n  }\n}\n\n\n\ngridWrapper.addEventListener('mouseover', handleMouseover);\n\nfunction handleMouseover(e) {\n  if (!e.target.classList.contains('visualiser')) {\n\n    const DOMEle = e.target;\n    const isWall = e.target.classList.contains('wall-node');\n    const isStart = e.target.classList.contains('start-node');\n    const isEnd = e.target.classList.contains('end-node');\n\n    if (e.target != prevEle) {\n      if (e.buttons === 1 && prevEle.classList.contains('start-node')) {\n        prevEle.classList.remove('start-node');\n        const prevGridCoords = prevEle.id.split('-');\n        grid[prevGridCoords[0]][prevGridCoords[1]].isStart = false;\n\n        const current = gridWrapper.querySelector(`div[id=\"${DOMEle.id}\"]`);\n        const gridCoords = current.id.split('-');\n\n        current.classList.add('start-node');\n        grid[gridCoords[0]][gridCoords[1]].isStart = true;\n        grid.startNode = [parseInt(gridCoords[0]), parseInt(gridCoords[1])];\n\n        current.classList.remove('wall-node');\n        grid[gridCoords[0]][gridCoords[1]].isWall = false;\n\n        prevEle = DOMEle;\n\n      } else if (e.buttons === 1 && prevEle.classList.contains('end-node')) {\n        prevEle.classList.remove('end-node');\n        const prevGridCoords = prevEle.id.split('-');\n        grid[prevGridCoords[0]][prevGridCoords[1]].isEnd = false;\n\n        const current = gridWrapper.querySelector(`div[id=\"${DOMEle.id}\"]`);\n        const gridCoords = current.id.split('-');\n        current.classList.add('end-node');\n        grid[gridCoords[0]][gridCoords[1]].isEnd = true;\n        grid.endNode = [parseInt(gridCoords[0]), parseInt(gridCoords[1])];\n\n        current.classList.remove('wall-node');\n        grid[gridCoords[0]][gridCoords[1]].isWall = false;\n\n        prevEle = DOMEle;\n\n      } else if (e.buttons === 1 && isWall && !isStart && !isEnd) {\n        gridWrapper.querySelector(`div[id=\"${DOMEle.id}\"]`).classList.remove('wall-node');\n        const gridCoords = DOMEle.id.split('-');\n        grid[gridCoords[0]][gridCoords[1]].isWall = false;\n        prevEle = DOMEle;\n\n      } else if (e.buttons === 1 && !isWall && !isStart && !isEnd) {\n        gridWrapper.querySelector(`div[id=\"${DOMEle.id}\"]`).classList.add('wall-node');\n        const gridCoords = DOMEle.id.split('-');\n        grid[gridCoords[0]][gridCoords[1]].isWall = true;\n        prevEle = DOMEle;\n      }\n    }\n  }\n}\n\n\n//---------------------------------------------\n//\n//GRAPH ALGO'S\n//\n//---------------------------------------------\n\nfunction randInt(max, min = 0) {\n  return Math.floor(Math.random() * (max - min + 1) + min);\n}\n\nfunction createGrid(gridSize, wrapper) {\n  const wrapperWidth = wrapper.offsetWidth;\n  const wrapperHeight = wrapper.offsetHeight;\n\n  const gridWidth = gridSize;\n  const gridHeight = Math.round(gridSize * 0.45);\n\n  const divWidth = (wrapperWidth / gridWidth).toFixed(3);\n  const divHeight = (wrapperHeight / gridHeight).toFixed(3);\n\n  for (let y = 0; y < gridHeight; y++) {\n    grid.push(new Array());\n    for (let x = 0; x < gridWidth; x++) {\n      const div = document.createElement(\"div\");\n      div.classList.add(\"node\");\n      div.setAttribute(\"id\", y + \"-\" + x);\n      div.style.width = divWidth + \"px\";\n      div.style.height = divHeight + \"px\";\n      wrapper.append(div);\n\n      grid[y].push(new Node(`${y}-${x}`));\n      grid[y][x].DOMRef = div;\n    }\n  }\n}\n\nfunction generateWallsRandom() {\n  const height = grid.length - 1;\n  const width = grid[0].length - 1\n\n  const totalWalls = (height * width) / 3;\n  const nodesToAnimate = [];\n\n  for (let i = 0; i < totalWalls; i++) {\n    const y = randInt(height);\n    const x = randInt(width);\n    if (grid[y][x].isWall || grid[y][x].isStart || grid[y][x].isEnd) {\n      i--;\n    } else {\n      nodesToAnimate.push(grid[y][x])\n    }\n  }\n  animateNodes(nodesToAnimate, 'wall');\n}\n\nfunction generateWallsPerimiter() {\n  const nodesToAnimate = grid.map((row, index1) => row.map((node, index2) => {\n\n    if (index1 === 0 || index1 === grid.length - 1) {\n      return node\n    } else if (index2 === 0 || index2 === row.length - 1) {\n      return node\n    }\n  }))\n    .flat()\n    .filter(n => n);\n\n  animateNodes(nodesToAnimate, 'wall')\n}\n\nfunction chooseOrientation(width, height) {\n  if (width < height) {\n    return \"horizontal\";\n  } else if (height < width) {\n    return \"vertical\";\n  } else {\n    return Math.floor(Math.random() * 2) ? \"horizontal\" : \"vertical\";\n  }\n}\n\nfunction generateWallsRecursiveDivisionRedone() {\n  const wallsToAnimate = [];\n  const previousHoles = grid.map(row => row.map(node => false));\n\n  grid.forEach((row, yIndex) => row.forEach((node, xIndex) => {\n    if (yIndex === 0 || yIndex === grid.length - 1) wallsToAnimate.push(node);\n    else if (xIndex === 0 || xIndex === row.length - 1) wallsToAnimate.push(node);\n  }));\n\n  // const reversedBottomRow = wallsToAnimate.splice(-grid[0].length).reverse();\n\n  // wallsToAnimate.concat(reversedBottomRow);\n\n  // console.log(wallsToAnimate);\n\n\n\n  const firstYStart = 1;\n  const firstYEnd = grid.length - 2;\n  const firstXStart = 1;\n  const firstXEnd = grid[0].length - 2;\n\n  const orientation = chooseOrientation(firstXEnd - firstXStart, firstYEnd - firstYStart);\n\n  divide(firstYStart, firstYEnd, firstXStart, firstXEnd, orientation);\n\n  animateNodes(wallsToAnimate, 'wall');\n\n\n  function divide(yStart, yEnd, xStart, xEnd, orient) {\n    const width = xEnd - xStart + 1;\n    const height = yEnd - yStart + 1;\n\n    //prevents walls right next to eachother\n    if (width < 2 || height < 2 || height * width < 5) return;\n\n    if (orient == 'horizontal') {\n      const yDivideCoord = randInt(yEnd - 1, yStart + 1);\n      let holeCoord\n\n      if (previousHoles[yDivideCoord][xStart - 1]) {\n        holeCoord = xStart;\n      } else if (previousHoles[yDivideCoord][xEnd + 1]) {\n        holeCoord = xEnd;\n      } else {\n        holeCoord = Math.random() > .5 ? xStart : xEnd;\n        // holeCoord = randInt(xEnd, xStart);\n      }\n\n      for (let i=xStart; i <= xEnd; i++) {\n        if (grid[yDivideCoord][i].isStart || grid[yDivideCoord][i].isEnd || i === holeCoord){\n          previousHoles[yDivideCoord][i] = true;\n        }\n        if (previousHoles[yDivideCoord][i]) continue;\n\n        wallsToAnimate.push(grid[yDivideCoord][i]);\n      }\n\n      //topside\n      let orient = chooseOrientation(width, yDivideCoord - yStart);\n      divide(yStart, yDivideCoord-1, xStart, xEnd, orient);\n\n      //bottomside\n      orient = chooseOrientation(width, yEnd - yDivideCoord);\n      divide(yDivideCoord+1, yEnd, xStart, xEnd, orient);\n\n\n    } else {\n      const xDivideCoord = randInt(xEnd - 1, xStart + 1);\n\n      let holeCoord;\n      if (previousHoles[yStart-1][xDivideCoord]) {\n        holeCoord = yStart;\n      } else if (previousHoles[yEnd+1][xDivideCoord]) {\n        holeCoord = yEnd;\n      } else {\n        holeCoord = Math.random() > .5 ? yStart : yEnd;\n        // holeCoord = randInt(yEnd, yStart);\n      }\n\n      for (let i=yStart; i <= yEnd; i++) {\n\n        if (grid[i][xDivideCoord].isStart || grid[i][xDivideCoord].isEnd || i === holeCoord){\n          previousHoles[i][xDivideCoord] = true;\n        }\n        if (previousHoles[i][xDivideCoord]) continue;\n\n        wallsToAnimate.push(grid[i][xDivideCoord]);\n      }\n\n      //divide left side\n      let orient = chooseOrientation(xDivideCoord - xStart, height);\n      divide(yStart, yEnd, xStart, xDivideCoord-1, orient);\n\n      //divide right side\n      orient = chooseOrientation(xEnd - xDivideCoord, height);\n      divide(yStart, yEnd, xDivideCoord+1, xEnd, orient);\n    }\n  }\n}\n\nfunction manhattanDist(yCurrent, xCurrent, yEnd, xEnd) {\n  return Math.abs((yEnd - yCurrent)) + Math.abs((xEnd - xCurrent))\n}\n\nfunction greedyBreadthFirstSearch() {\n  const visitedNodesToDisplay = [];\n  const visited = grid.map(row => row.map(node => false));\n  const horizDist = grid.map(row => row.map(node => Infinity));\n  const prev = grid.map(row => row.map(node => null));\n\n  const priorityQueue = new MinHeap;\n  const startNode = grid[grid.startNode[0]][grid.startNode[1]];\n  const endNode = grid[grid.endNode[0]][grid.endNode[1]];\n  let currentHorizDist = manhattanDist(startNode.y, startNode.x, endNode.y, endNode.x);\n\n  priorityQueue.insert([currentHorizDist, startNode]);\n\n  while (!priorityQueue.isEmpty()) {\n    const [currentHorizDist, currentNode] = priorityQueue.extractMin();\n    visited[currentNode.y][currentNode.x] = true;\n    visitedNodesToDisplay.push(currentNode);\n\n    if (currentNode === endNode) {\n      const shortestPath = getShortestPath(currentNode, prev, startNode);\n      animateNodes(visitedNodesToDisplay, 'visited');\n      animateNodes(shortestPath, 'path');\n      return\n    };\n\n    const neighbors = Object.values(currentNode.getNeighbors()).filter(n => {\n      if (n && !n.isWall) return n;\n    });\n\n    for (let neighbor of neighbors) {\n      if (visited[neighbor.y][neighbor.x]) continue;\n\n      let newHorizDist = manhattanDist(neighbor.y, neighbor.x, endNode.y, endNode.x);\n      if (newHorizDist < horizDist[neighbor.y][neighbor.x]) {\n        horizDist[neighbor.y][neighbor.x] = newHorizDist;\n        priorityQueue.insert([newHorizDist, neighbor]);\n        prev[neighbor.y][neighbor.x] = currentNode;\n      }\n    }\n  }\n  animateNodes(visitedNodesToDisplay, 'visited');\n}\n\nfunction aStar() {\n  const visitedNodesToDisplay = [];\n  const startNode = grid[grid.startNode[0]][grid.startNode[1]];\n  const endNode = grid[grid.endNode[0]][grid.endNode[1]];\n\n  const visited = grid.map(row => row.map(node => false));\n  const prev = grid.map(row => row.map(node => null));\n  const horizDist = grid.map(row => row.map(node => Infinity));\n\n  horizDist[startNode.y][startNode.x] = 0;\n  const weight = 1\n  let currentHorizDist = manhattanDist(startNode.y, startNode.x, endNode.y, endNode.x);\n\n\n\n  const priorityQueue = new MinHeap;\n  priorityQueue.insert([0, startNode]);\n\n  while (!priorityQueue.isEmpty()) {\n    const [currentGlobalCost, currentNode] = priorityQueue.extractMin();\n    visited[currentNode.y][currentNode.x] = true;\n    visitedNodesToDisplay.push(currentNode);\n\n    if (currentNode == endNode) {\n      const shortestPath = getShortestPath(currentNode, prev, startNode);\n      animateNodes(visitedNodesToDisplay, 'visited');\n      animateNodes(shortestPath, 'path');\n      break;\n    };\n\n    const neighbors = Object.values(currentNode.getNeighbors()).filter(n => n && !n.isWall);\n\n    for (let neighbor of neighbors) {\n      if (visited[neighbor.y][neighbor.x]) continue;\n\n      const newNeighborDist = horizDist[currentNode.y][currentNode.x] + weight;\n      const neighborHorizDist = manhattanDist(neighbor.y, neighbor.x, endNode.y, endNode.x);\n      const newGlobalCost = newNeighborDist + neighborHorizDist;\n      // console.log( newNeighborDist, neighborHorizDist, newGlobalCost);\n\n      if (newGlobalCost < horizDist[neighbor.y][neighbor.x] + neighborHorizDist) {\n        horizDist[neighbor.y][neighbor.x] = newNeighborDist;\n        priorityQueue.insert([newGlobalCost, neighbor]);\n        prev[neighbor.y][neighbor.x] = currentNode;\n      }\n\n\n    }\n  }\n  animateNodes(visitedNodesToDisplay, 'visited');\n}\n\nfunction breadthFirstSearch() {\n  const queue = [];\n  const nodesToDisplay = []\n\n  const endNode = grid[grid.endNode[0]][grid.endNode[1]];\n  const startNode = grid[grid.startNode[0]][grid.startNode[1]];\n\n  const prev = grid.map(row => row.map(n => null));\n  const visited = grid.map(row => row.map(n => false));\n\n  queue.push(startNode);\n\n  while (queue.length) {\n    let currentNode = queue.shift();\n    visited[currentNode.y][currentNode.x] = true;\n\n    // nodesToDisplay.push(currentNode);\n\n    if (currentNode === endNode) {\n      const shortestPath = getShortestPath(currentNode, prev, startNode);\n      animateNodes(nodesToDisplay, 'visited');\n      animateNodes(shortestPath, 'path');\n\n      return;\n    }\n\n    const neighbors = Object.values(currentNode.getNeighbors()).filter(n => {\n      if (n && !n.isWall) return n\n    });\n\n    for (let neighbor of neighbors) {\n      if (visited[neighbor.y][neighbor.x]) continue;\n\n      visited[neighbor.y][neighbor.x] = true;\n      nodesToDisplay.push(neighbor)\n      // neighbor.DOMRef.classList.add('visited');\n      prev[neighbor.y][neighbor.x] = currentNode;\n      queue.push(neighbor);\n    }\n  }\n  animateNodes(nodesToDisplay, 'visited');\n}\n\nfunction biDirectionalBreadthFirstSearch() {\n  const endNode = grid[grid.endNode[0]][grid.endNode[1]];\n  const startNode = grid[grid.startNode[0]][grid.startNode[1]];\n  const nodesToDisplay = [];\n\n  const startNodeQueue = [];\n  const startNodePrev = grid.map(row => row.map(_ => null));\n  const startVisited = grid.map(row => row.map(_ => false));\n  startNodeQueue.push(startNode);\n\n\n  const endNodeQueue = [];\n  const endNodePrev = grid.map(row => row.map(_ => null));\n  const endVisited = grid.map(row => row.map(_ => false));\n  endNodeQueue.push(endNode);\n\n  while (endNodeQueue.length && startNodeQueue.length) {\n    const currentEndNode = endNodeQueue.shift();\n    const currentStartNode = startNodeQueue.shift();\n    let intersection;\n\n    for (let y = 0; y < startVisited.length; y++) {\n      for (let x = 0; x < startVisited[0].length; x++) {\n        if (startVisited[y][x] && endVisited[y][x]) {\n          intersection = grid[y][x];\n          break;\n        }\n      }\n    }\n\n    if (intersection) {\n      animateNodes(nodesToDisplay, 'visited');\n      const shortestPathStart = getShortestPath(intersection, startNodePrev, startNode);\n      const shortestPathEnd = getShortestPath(intersection, endNodePrev, endNode);\n      shortestPathStart.push(intersection);\n      animateNodes(shortestPathStart.concat(shortestPathEnd.reverse()), 'path');\n      return\n    }\n\n    const startNeighbors = Object.values(currentStartNode.getNeighbors()).filter(n => n && !n.isWall);\n    const endNeighbors = Object.values(currentEndNode.getNeighborsReversed()).filter(n => n && !n.isWall);\n\n    for (let neighbor of startNeighbors) {\n      if (startVisited[neighbor.y][neighbor.x]) continue;\n\n      startVisited[neighbor.y][neighbor.x] = true;\n      nodesToDisplay.push(neighbor);\n      startNodePrev[neighbor.y][neighbor.x] = currentStartNode;\n      startNodeQueue.push(neighbor);\n    }\n\n    for (let neighbor of endNeighbors) {\n      if (endVisited[neighbor.y][neighbor.x]) continue;\n\n      endVisited[neighbor.y][neighbor.x] = true;\n      nodesToDisplay.push(neighbor);\n      endNodePrev[neighbor.y][neighbor.x] = currentEndNode;\n      endNodeQueue.push(neighbor);\n    }\n  }\n\n  animateNodes(nodesToDisplay, 'visited');\n}\n\nfunction depthFirstSearch() {\n  const stack = [];\n  const nodesToDisplay = [];\n\n  const endNode = grid[grid.endNode[0]][grid.endNode[1]];\n  const startNode = grid[grid.startNode[0]][grid.startNode[1]];\n\n  const prev = grid.map(row => row.map(n => null));\n  const visited = grid.map(row => row.map(n => false));\n  visited[startNode.y][startNode.x];\n\n  stack.push(startNode);\n\n  while (stack.length) {\n    const currentNode = stack.pop();\n    visited[currentNode.y][currentNode.x] = true;\n    nodesToDisplay.push(currentNode);\n\n    if (currentNode == endNode) {\n\n      const shortestPath = getShortestPath(currentNode, prev, startNode);\n      animateNodes(nodesToDisplay, 'visited');\n      animateNodes(shortestPath, 'path');\n      return;\n    }\n\n\n    const neighbors = Object.values(currentNode.getNeighbors()).filter(n => {\n      if (n && !n.isWall) return n;\n    });\n\n    for (let neighbor of neighbors) {\n      if (visited[neighbor.y][neighbor.x]) continue;\n\n\n      prev[neighbor.y][neighbor.x] = currentNode;\n      stack.push(neighbor);\n      // break;\n    }\n  }\n  animateNodes(nodesToDisplay, 'visited');\n}\n\nfunction getShortestPath(currentNode, prev, startNode) {\n  const shortestPath = [];\n  while (true) {\n    if (prev[currentNode.y][currentNode.x] == startNode) break;\n\n    shortestPath.unshift(prev[currentNode.y][currentNode.x])\n    currentNode = prev[currentNode.y][currentNode.x]\n  }\n  return shortestPath\n}\n\nfunction animateNodes(nodesArray, type, reverse = false) {\n  const speed = grid.animationSpeed;\n\n  switch (type) {\n    case 'wall':\n      let wallAnimation;\n      (reverse) ? wallAnimation =\n        [{ transform: 'scale(1.2)', offset: 0.75 }, { backgroundColor: 'hsl(0, 0%, 100%)' }]\n        : [{ transform: 'scale(1.2)', offset: 0.75 }, { backgroundColor: 'hsla(240, 23%, 8%, 0.9)' }];\n\n      for (let i = 0; i < nodesArray.length; i++) {\n        const currentNode = nodesArray[i];\n        if (speed === 0) {\n          (reverse) ? currentNode.isWall = false : currentNode.isWall = true;\n          (reverse) ? currentNode.DOMRef.classList.remove('wall-node') : currentNode.DOMRef.classList.add('wall-node');\n          (reverse) ? currentNode.DOMRef.animate(wallAnimation, 400) : currentNode.DOMRef.animate(wallAnimation, 400);\n        } else {\n          setTimeout(() => {\n            (reverse) ? currentNode.isWall = false : currentNode.isWall = true;\n            (reverse) ? currentNode.DOMRef.classList.remove('wall-node') : currentNode.DOMRef.classList.add('wall-node');\n            (reverse) ? currentNode.DOMRef.animate(wallAnimation, 400) : currentNode.DOMRef.animate(wallAnimation, 400);\n          }, speed * i);\n        }\n      }\n      return true;\n\n    case 'visited':\n\n      const visitedAnimation = [{ transform: 'scale(.2)' },\n      { borderRadius: '50%', backgroundColor: 'hsl(281, 53%, 24%)', offset: 0.25 },\n      { transform: 'scale(1.2)', offset: 0.7 }];\n\n      for (let i = 0; i < nodesArray.length; i++) {\n        const currentNode = nodesArray[i];\n        if (speed === 0) {\n          currentNode.visited = true;\n          currentNode.DOMRef.classList.add('visited');\n        } else {\n          setTimeout(() => {\n            currentNode.visited = true;\n            currentNode.DOMRef.classList.add('visited');\n            currentNode.DOMRef.animate(visitedAnimation, 500);\n          }, speed * i);\n        }\n      }\n      return true;\n\n    case 'path':\n\n      const pathAnimation = [{ transform: 'scale(.5)' }, { backgroundColor: 'hsla(115, 41%, 30%, 0.397)', offset: .5 }, { transform: 'scale(1.2)', offset: .75 }];\n      for (let i = 0; i < nodesArray.length; i++) {\n        const node = nodesArray[i];\n        if (speed === 0) {\n          node.DOMRef.classList.add('path-node');\n        } else {\n          setTimeout(() => {\n            node.DOMRef.classList.add('path-node');\n            node.DOMRef.animate(pathAnimation, 500);\n          }, speed * i)\n        }\n      }\n      ;\n\n    default:\n      return;\n  }\n}\n\nfunction getRecursiveBacktrackerUnvisitedNeighbors(currentX, currentY, visited) {\n  let possibleNeighbors = [\n    [currentY - 2, currentX],\n    [currentY, currentX + 2],\n    [currentY + 2, currentX],\n    [currentY, currentX - 2]\n  ];\n\n  let neighbors = [];\n\n  for (let i = 0; i < possibleNeighbors.length; i++) {\n    let [y, x] = possibleNeighbors[i];\n    if (y < 0 || y > grid.length - 1 || x < 0 || x > grid[0].length - 1) continue;\n    if (visited[y][x]) continue;\n\n    neighbors.push([y, x]);\n  }\n  if (neighbors.length > 0) {\n    const nextIdx = Math.floor(Math.random() * neighbors.length);\n    return neighbors[nextIdx];\n  } else {\n    return\n  }\n}\n\nfunction generateMazeRecursiveBacktracker(startX, startY) {\n  grid.map(row => row.map(node => {\n    if (node.isStart || node.isEnd) return;\n\n    node.isWall = true;\n    node.DOMRef.classList.add('wall-node');\n  }));\n\n  const visited = grid.map(row => row.map(_ => false));\n  visited[startY][startX] = true;\n\n  const nodesToAddWall = [];\n  const stack = [];\n  let [currentY, currentX] = [startY, startX];\n\n  while (true) {\n\n    let next = getRecursiveBacktrackerUnvisitedNeighbors(currentX, currentY, visited);\n    console.log('next[Y, X] ' + next);\n    nodesToAddWall.push(grid[currentY][currentX]);\n\n    if (next) {\n      stack.push(next);\n\n      let [nextY, nextX] = next;\n      visited[nextY][nextX] = true;\n      let inbetweenWall;\n      if (currentX === nextX) {\n        if (currentY > nextY) {\n          inbetweenWall = [currentY - 1, currentX]\n        } else {\n          inbetweenWall = [currentY + 1, currentX]\n        }\n      } else if (currentY === nextY) {\n        if (currentX > nextX) {\n          inbetweenWall = [currentY, currentX - 1]\n        } else {\n          inbetweenWall = [currentY, currentX + 1]\n        }\n      }\n\n      nodesToAddWall.push(grid[inbetweenWall[0]][inbetweenWall[1]]);\n\n      currentY = nextY;\n      currentX = nextX;\n    } else {\n      console.log('no next')\n      if (stack.length > 0) {\n        next = stack.pop();\n\n        [currentY, currentX] = next;\n      } else {\n        break;\n      }\n\n\n    }\n  }\n  animateNodes(nodesToAddWall, 'wall', true)\n}\n\n/* function djikstra() {\n  const visited = grid.map(row => row.map(node => false));\n  const weight = grid.map(row => row.map(node => (node.isWeight) ? 10 : 1 ));\n  const dist = grid.map(row => row.map(node => Infinity));\n  const prev = grid.map(row => row.map(node => null));\n  const visitedNodesToDisplay = [];\n\n  const startNode = grid[grid.startNode[0]][grid.startNode[1]];\n  const endNode = grid[grid.endNode[0]][grid.endNode[1]];\n\n  dist[startNode.y][startNode.x] = 0;\n  const priorityQueue = new MinHeap;\n\n  priorityQueue.insert([0, startNode]);\n\n  while (!priorityQueue.isEmpty()) {\n    const [currentDist, currentNode] = priorityQueue.extractMin();\n    visited[currentNode.y][currentNode.x] = true;\n    visitedNodesToDisplay.push(currentNode);\n    console.log(priorityQueue.heap);\n\n\n\n    if (currentNode == endNode) {\n      animateNodes(visitedNodesToDisplay, 'visited');\n      console.log(prev);\n      break;\n    }\n\n    const neighbors = Object.values(currentNode.getNeighbors()).filter(n => {\n      if (n && !n.isWall) return n;\n    });\n\n    for (const neighbor of neighbors) {\n      if (visited[neighbor.y][neighbor.x]) {\n        console.log('passed');\n        continue;\n      }\n\n      let newDistance = currentDist + weight[neighbor.y][neighbor.x];\n\n      if (newDistance < dist[neighbor.y][neighbor.x]) {\n        dist[neighbor.y][neighbor.x] = newDistance;\n        priorityQueue.insert([newDistance, neighbor]);\n        prev[neighbor.y][neighbor.x] = currentNode;\n      }\n    }\n  }\n\n} */","var OVERLAY_ID = '__parcel__error__overlay__';\n\nvar OldModule = module.bundle.Module;\n\nfunction Module(moduleName) {\n  OldModule.call(this, moduleName);\n  this.hot = {\n    data: module.bundle.hotData,\n    _acceptCallbacks: [],\n    _disposeCallbacks: [],\n    accept: function (fn) {\n      this._acceptCallbacks.push(fn || function () {});\n    },\n    dispose: function (fn) {\n      this._disposeCallbacks.push(fn);\n    }\n  };\n\n  module.bundle.hotData = null;\n}\n\nmodule.bundle.Module = Module;\nvar checkedAssets, assetsToAccept;\n\nvar parent = module.bundle.parent;\nif ((!parent || !parent.isParcelRequire) && typeof WebSocket !== 'undefined') {\n  var hostname = process.env.HMR_HOSTNAME || location.hostname;\n  var protocol = location.protocol === 'https:' ? 'wss' : 'ws';\n  var ws = new WebSocket(protocol + '://' + hostname + ':' + process.env.HMR_PORT + '/');\n  ws.onmessage = function(event) {\n    checkedAssets = {};\n    assetsToAccept = [];\n\n    var data = JSON.parse(event.data);\n\n    if (data.type === 'update') {\n      var handled = false;\n      data.assets.forEach(function(asset) {\n        if (!asset.isNew) {\n          var didAccept = hmrAcceptCheck(global.parcelRequire, asset.id);\n          if (didAccept) {\n            handled = true;\n          }\n        }\n      });\n\n      // Enable HMR for CSS by default.\n      handled = handled || data.assets.every(function(asset) {\n        return asset.type === 'css' && asset.generated.js;\n      });\n\n      if (handled) {\n        console.clear();\n\n        data.assets.forEach(function (asset) {\n          hmrApply(global.parcelRequire, asset);\n        });\n\n        assetsToAccept.forEach(function (v) {\n          hmrAcceptRun(v[0], v[1]);\n        });\n      } else if (location.reload) { // `location` global exists in a web worker context but lacks `.reload()` function.\n        location.reload();\n      }\n    }\n\n    if (data.type === 'reload') {\n      ws.close();\n      ws.onclose = function () {\n        location.reload();\n      }\n    }\n\n    if (data.type === 'error-resolved') {\n      console.log('[parcel] ✨ Error resolved');\n\n      removeErrorOverlay();\n    }\n\n    if (data.type === 'error') {\n      console.error('[parcel] 🚨  ' + data.error.message + '\\n' + data.error.stack);\n\n      removeErrorOverlay();\n\n      var overlay = createErrorOverlay(data);\n      document.body.appendChild(overlay);\n    }\n  };\n}\n\nfunction removeErrorOverlay() {\n  var overlay = document.getElementById(OVERLAY_ID);\n  if (overlay) {\n    overlay.remove();\n  }\n}\n\nfunction createErrorOverlay(data) {\n  var overlay = document.createElement('div');\n  overlay.id = OVERLAY_ID;\n\n  // html encode message and stack trace\n  var message = document.createElement('div');\n  var stackTrace = document.createElement('pre');\n  message.innerText = data.error.message;\n  stackTrace.innerText = data.error.stack;\n\n  overlay.innerHTML = (\n    '<div style=\"background: black; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; opacity: 0.85; font-family: Menlo, Consolas, monospace; z-index: 9999;\">' +\n      '<span style=\"background: red; padding: 2px 4px; border-radius: 2px;\">ERROR</span>' +\n      '<span style=\"top: 2px; margin-left: 5px; position: relative;\">🚨</span>' +\n      '<div style=\"font-size: 18px; font-weight: bold; margin-top: 20px;\">' + message.innerHTML + '</div>' +\n      '<pre>' + stackTrace.innerHTML + '</pre>' +\n    '</div>'\n  );\n\n  return overlay;\n\n}\n\nfunction getParents(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return [];\n  }\n\n  var parents = [];\n  var k, d, dep;\n\n  for (k in modules) {\n    for (d in modules[k][1]) {\n      dep = modules[k][1][d];\n      if (dep === id || (Array.isArray(dep) && dep[dep.length - 1] === id)) {\n        parents.push(k);\n      }\n    }\n  }\n\n  if (bundle.parent) {\n    parents = parents.concat(getParents(bundle.parent, id));\n  }\n\n  return parents;\n}\n\nfunction hmrApply(bundle, asset) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (modules[asset.id] || !bundle.parent) {\n    var fn = new Function('require', 'module', 'exports', asset.generated.js);\n    asset.isNew = !modules[asset.id];\n    modules[asset.id] = [fn, asset.deps];\n  } else if (bundle.parent) {\n    hmrApply(bundle.parent, asset);\n  }\n}\n\nfunction hmrAcceptCheck(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (!modules[id] && bundle.parent) {\n    return hmrAcceptCheck(bundle.parent, id);\n  }\n\n  if (checkedAssets[id]) {\n    return;\n  }\n  checkedAssets[id] = true;\n\n  var cached = bundle.cache[id];\n\n  assetsToAccept.push([bundle, id]);\n\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    return true;\n  }\n\n  return getParents(global.parcelRequire, id).some(function (id) {\n    return hmrAcceptCheck(global.parcelRequire, id)\n  });\n}\n\nfunction hmrAcceptRun(bundle, id) {\n  var cached = bundle.cache[id];\n  bundle.hotData = {};\n  if (cached) {\n    cached.hot.data = bundle.hotData;\n  }\n\n  if (cached && cached.hot && cached.hot._disposeCallbacks.length) {\n    cached.hot._disposeCallbacks.forEach(function (cb) {\n      cb(bundle.hotData);\n    });\n  }\n\n  delete bundle.cache[id];\n  bundle(id);\n\n  cached = bundle.cache[id];\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    cached.hot._acceptCallbacks.forEach(function (cb) {\n      cb();\n    });\n    return true;\n  }\n}\n"]}